<?php

# This file was automatically generated by the MediaWiki installer.
# If you make manual changes, please keep track in case you need to
# recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# http://www.mediawiki.org/wiki/Manual:Configuration_settings

# If you customize your file layout, set $IP to the directory that contains
# the other MediaWiki files. It will be used as a base to locate files.
if( defined( 'MW_INSTALL_PATH' ) ) {
	$IP = MW_INSTALL_PATH;
} else {
	$IP = dirname( __FILE__ );
}

$path = array( $IP, "$IP/includes", "$IP/languages" );
set_include_path( implode( PATH_SEPARATOR, $path ) . PATH_SEPARATOR . get_include_path() );

require_once( "$IP/includes/DefaultSettings.php" );

if ( $wgCommandLineMode ) {
	if ( isset( $_SERVER ) && array_key_exists( 'REQUEST_METHOD', $_SERVER ) ) {
		die( "This script must be run from the command line\n" );
	}
}
## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

$wgSitename         = "TI3Wiki.org";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs please see:
## http://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath       = "/w";
$wgScriptExtension  = ".php";
$wgArticlePath = "/wiki/$1";
$wgUsePathInfo = true;

## The relative URL path to the skins directory
$wgStylePath        = "$wgScriptPath/skins";

## The relative URL path to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogo             = "$wgStylePath/TI3/TI3logo.png";

## UPO means: this is also a user preference option

$wgEnableEmail      = true;
$wgEnableUserEmail  = true; # UPO

$wgEmergencyContact = "admin@ti3wiki.org";
$wgPasswordSender = "admin@ti3wiki.org";

$wgEnotifUserTalk = true; # UPO
$wgEnotifWatchlist = true; # UPO
$wgEmailAuthentication = true;

## Database settings
$wgDBtype           = "mysql";
require_once('LocalSettings.db.pwd');

# MySQL specific settings
$wgDBprefix         = "";

# MySQL table options to use during installation or update
$wgDBTableOptions   = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

# Experimental charset support for MySQL 4.1/5.0.
$wgDBmysql5 = true;

## Shared memory settings
$wgMainCacheType = CACHE_ACCEL;
$wgMemCachedServers = array();

# File cache
$wgUseFileCache = true; /* default: false */ 
$wgFileCacheDirectory = "$IP/cache"; 
$wgDisableCounters = true; 

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads       = true;
$wgUseImageResize = true;
$wgUseImageMagick = true;
$wgImageMagickConvertCommand = "/usr/bin/convert";
$wgMaxImageArea = 1.6e7;
$wgAllowCopyUploads = true;
$wgMaxShellMemory = 524288;
$wgUploadSizeWarning = 1024 * 1024 * 50;
$wgUploadMaxUploadSize = 1024 * 1024 * 150;
$wgFileExtensions = array( 'bmp', 'png', 'gif', 'jpg', 'jpeg', 'wav', 'pdf', 'doc', 'xls', 'ppt', 'zip' );
$wgMimeDetectorCommand = "file -bi";
$wgAllowExternalImages = true;

## If you use ImageMagick (or any other shell command) on a
## Linux server, this will need to be set to the name of an
## available UTF-8 locale
$wgShellLocale = "en_US.utf8";

## If you want to use image uploads under safe mode,
## create the directories images/archive, images/thumb and
## images/temp, and make them all writable. Then uncomment
## this, if it's not already uncommented:
# $wgHashedUploadDirectory = false;

## If you have the appropriate support software installed
## you can enable inline LaTeX equations:
$wgUseTeX           = false;

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publically accessible from the web.
#$wgCacheDirectory = "$IP/cache";

$wgLocalInterwiki   = strtolower( $wgSitename );

$wgLanguageCode = "en";

## Default skin: you can change the default skin. Use the internal symbolic
## names, ie 'vector', 'monobook':
#$wgDefaultSkin = 'vector';
$wgDefaultSkin = 'ti3';

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgEnableCreativeCommonsRdf = true;
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "http://www.gnu.org/copyleft/fdl.html";
$wgRightsText = "GNU Free Documentation License 1.3";
$wgRightsIcon = "${wgScriptPath}/skins/common/images/gnu-fdl.png";
# $wgRightsCode = "gfdl1_3"; # Not yet used

$wgDiff3 = "/usr/bin/diff3";

# When you make changes to this configuration file, this will make
# sure that cached pages are cleared.
$wgCacheEpoch = max( $wgCacheEpoch, gmdate( 'YmdHis', @filemtime( __FILE__ ) ) );

# Prevent anon users from editing
$wgGroupPermissions['*']['edit'] = false; 
# For non-logged in users; Removes link to talk page for for non-logged in users
$wgShowIPinHeader = false; 
# Require confirmed email to edit
$wgEmailConfirmToEdit = true;

$wgEnableScaryTranscluding = true;

###### START DEBUG SETTINGS #####
/*
$wgShowExceptionDetails = true;
$wgShowSQLErrors = true;
$wgDebugDumpSql  = true;
$wgDebugLogFile ='ti3wiki.log';

# Only record profiling info for pages that took longer than this
$wgProfileLimit = 0.0;
# Don't put non-profiling info into log file
$wgProfileOnly = false;
# Log sums from profiling into "profiling" table in db. 
$wgProfileToDatabase = false;
# If true, print a raw call tree instead of per-function report
$wgProfileCallTree = false;
#Should application server host be put into profiling table
$wgProfilePerHost = false;

#Settings for UDP profiler 
$wgUDPProfilerHost = '127.0.0.1';
$wgUDPProfilerPort = '3811';

# Detects non-matching wfProfileIn/wfProfileOut calls
$wgDebugProfiling = false;
# Output debug message on every wfProfileIn/wfProfileOut
$wgDebugFunctionEntry = 0;
# Lots of debugging output from SquidUpdate.php
$wgDebugSquid = false;
*/

######## START MAINTENANCE SETTINGS ########
/*
# Make wiki read only
$wgReadOnly = true;
# Disable account creation
$wgGroupPermissions['*']['createaccount'] = false;
$wgGroupPermissions['sysop']['createaccount'] = true;
*/

require_once('extensions/extensions.php');